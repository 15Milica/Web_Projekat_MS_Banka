// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace MS_Banka.Migrations
{
    [DbContext(typeof(BankaContext))]
    partial class BankaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Models.Kartica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Aktivna")
                        .HasColumnType("bit");

                    b.Property<long>("BrojKartice")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DatumVazenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("OsnovnaDodatna")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("RacunID")
                        .HasColumnType("int");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.HasIndex("RacunID");

                    b.ToTable("Kartica");
                });

            modelBuilder.Entity("Models.Korisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("JMBG")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("Models.Nalog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("JMBG")
                        .HasColumnType("int");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("Nalog");
                });

            modelBuilder.Entity("Models.Racun", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<long>("BrojRacuna")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DatumOtvaranja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumZatvaranja")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<double>("RaspolozivoStanje")
                        .HasColumnType("float");

                    b.Property<double>("Stanje")
                        .HasColumnType("float");

                    b.Property<string>("Valuta")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("Racun");
                });

            modelBuilder.Entity("Models.Transakcija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<double>("Iznos")
                        .HasColumnType("float");

                    b.Property<int?>("NaRacunID")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SaRacunaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("NaRacunID");

                    b.HasIndex("SaRacunaID");

                    b.ToTable("Transakcija");
                });

            modelBuilder.Entity("Models.Kartica", b =>
                {
                    b.HasOne("Models.Racun", "Racun")
                        .WithMany("Kartice")
                        .HasForeignKey("RacunID");

                    b.Navigation("Racun");
                });

            modelBuilder.Entity("Models.Nalog", b =>
                {
                    b.HasOne("Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Models.Racun", b =>
                {
                    b.HasOne("Models.Korisnik", "Korisnik")
                        .WithMany("Racuni")
                        .HasForeignKey("KorisnikID");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Models.Transakcija", b =>
                {
                    b.HasOne("Models.Racun", "NaRacun")
                        .WithMany()
                        .HasForeignKey("NaRacunID");

                    b.HasOne("Models.Racun", "SaRacuna")
                        .WithMany()
                        .HasForeignKey("SaRacunaID");

                    b.Navigation("NaRacun");

                    b.Navigation("SaRacuna");
                });

            modelBuilder.Entity("Models.Korisnik", b =>
                {
                    b.Navigation("Racuni");
                });

            modelBuilder.Entity("Models.Racun", b =>
                {
                    b.Navigation("Kartice");
                });
#pragma warning restore 612, 618
        }
    }
}
